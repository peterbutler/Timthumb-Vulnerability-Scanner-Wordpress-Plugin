<?php

class CG_TVS_Plugin{

  var $script_latest_version;
  var $script_safe_version;
  var $last_version_check;
  
  var $last_scan;
  var $script_instances;
  var $suspicious_files;

  var $plugin_base;
  
  var $current_timthumb_src_version;

  function init(){
    $storage_array = get_option( 'cg_tvs_data' );
    if(is_array($storage_array)){
      $this->script_latest_version      = $storage_array['script_latest_version'];
      $this->script_safe_version        = $storage_array['script_safe_version'];
      $this->last_version_check         = $storage_array['last_version_check'];

      $this->script_instances           = $storage_array['script_instances'];
      $this->suspicious_files           = $storage_array['suspicious_files'];
      $this->last_scan                  = $storage_array['last_scan'];
      
    }else{
      $this->script_latest_version      = '2.8.2';
      $this->script_safe_version        = '2.8.2';
      $this->last_version_check         = 0;

      $this->script_instances           = array();
      $this->suspicious_files           = array();
      $this->last_scan                  = 0;
      $this->save();
    }
    if($this->last_version_check < time()-86400){
      $this->get_fresh_data();
      $this->save();
    }
    $this->plugin_base_dir = trailingslashit(dirname(__FILE__));
    if(!is_writeable($this->plugin_base_dir)){
      $this->show_message('The plugin directory (at '.$this->plugin_base_dir.') is not writeable.  Because of this, we can\'t download an updated copy of timthumb to use.  Try changing permissions on this directory to 755 (or in certain cases, 777)', 'error');
    }
  }

  function add_menus(){
  	add_management_page( 'Timthumb Scanner', 'Timthumb Scanner', 'manage_options', 'cg-timthumb-scanner', array(&$this, 'admin_panel_controller' ) );
  }
  
  
  function activate(){
    $this->init();
  	delete_option( 'cg_tvs_last_checked' );
  	delete_option( 'cg_tvs_vulnerable_files' );
  	delete_option( 'cg_tvs_safe_files' );
  }
  
  function deactivate(){
  	delete_option( 'cg_tvs_data' );
  }
  
  function get_fresh_data(){
    include_once(ABSPATH . WPINC . '/class-IXR.php');
    $ixr_client = new IXR_Client('http://codegarage.com/comm.php');
    if(!$ixr_client->query('request.TimthumbInfo')){
      // request failed.  Handle this.
    	$this->show_message('Updated script information request failed.');
    }else{
      $response = $ixr_client->getResponse();
      $this->script_latest_version      = $response['latest_version'];
      $this->script_safe_version        = $response['safe_version'];
    }
    $this->last_version_check = time();
  }
  
  function scan( $scan_base = WP_CONTENT_DIR ){
  	require_once 'class-cg-tvs-filescanner.php';
  	$scanner = new CG_FileScanner( $scan_base );
  	$scanner->generate_inventory();
  	$scanner->scan_inventory_timthumb();
  	$scanner->check_for_intrusion_files();
    $this->last_scan = time();
    $this->script_instances = $scanner->instances;
    $this->suspicious_files = $scanner->suspicious_files;
  	$this->show_message('Scan completed.');
  	$this->save();
  }
  
  function get_version_float($version){
    // Convert version string into a float
    $version_parts = explode('.', $version);
    $version = $version_parts[0].'.';
    for( $position = 1; $position<count($version_parts); ++$position ){
      $version .= $version_parts[$position];
    }
    
    return floatval($version);
    
  }
  
  function get_version_status($version){
    $version = $this->get_version_float($version);
    if( $version < $this->get_version_float($this->script_safe_version) ){
      return "Vulnerable";
    }
    if( $version < $this->get_version_float($this->script_latest_version) ){
      return "Outdated";
    }else{
      return "Up to Date";
    }
  }
  function display_version_status($version){
    $status = $this->get_version_status($version);
    switch($status){
      case 'Vulnerable':
        return "<span style='color:red'>Vulnerable</span>";
        break;
      case 'Outdated':
        return "<span style='color:#FFCC00'>Outdated</span>";
        break;
      case 'Up to Date':
        return "<span style='color:forestgreen'>Up to Date</span>";
        break;
    }
  }
  function fix_file( $file, $backup = 'without-backup' ) {
    if($backup == 'with-backup'){
      $this->backup_file( $file );
    }
  	
    if(FALSE === $latest_src = $this->get_timthumb_src()){
      $this->show_message('We can\'t read updated timthumb source file, so we can\'t update the selected files.  Try checking permissions on the plugin folder and the file "cg-tvs-timthumb-latest.txt", if it exists.');
    }
    

  	if( FALSE !== $fw = @fopen( $file, 'w' ) ) {
  		if ( fwrite( $fw, $latest_src ) ) {
  			$this->show_message( 'File <strong>' . basename( $file ) . '</strong> at <em>' . $file . '</em> successfully upgraded.' );
  		} else {
  			$this->show_message( 'Unknown file write error.', true );
  		}
  	} else {
  		$this->show_message( 'CAN\'T OPEN VULNERABLE FILE FOR WRITING', true );
  		return;
  	}
  }
  
  function get_timthumb_src_version(){
    $current_src = $this->get_timthumb_src();
    preg_match( "~define\s*\(\s*[\'|\"]VERSION[\'|\"],\s*[\'|\"]([^\'|\"]*)~", $current_src, $matches );
    $this->current_timthumb_src_version = $matches[1];
  }
  
  function download_new_timthumb_src(){
    $tmp_filename = download_url( 'http://timthumb.googlecode.com/svn/trunk/timthumb.php' );
		if ( is_wp_error( $tmp_filename ) ) {
      $this->show_message( 'Error downloading updated copy of timthumb.php.  Can\'t fix outdated files.' );
      return false;
		}
    @unlink($this->plugin_base_dir . 'cg-tvs-timthumb-latest.txt');
    rename($tmp_filename, $this->plugin_base_dir . 'cg-tvs-timthumb-latest.txt');
    @unlink($tmp_filename);
    if(is_file($this->plugin_base_dir . 'cg-tvs-timthumb-latest.txt')){
      $this->get_timthumb_src_version();
      $this->show_message( 'Updated copy of timthumb downloaded successfully.' );
      return true;
    }else{
      $this->show_message( 'Error downloading updated copy of timthumb.php.  Can\'t fix outdated files.' );
      return false;
    }
  }
  
  function get_timthumb_src(){
  	$src_file_path = $this->plugin_base_dir . 'cg-tvs-timthumb-latest.txt';
  	if ( FALSE !== $fr = @fopen( $src_file_path, 'r' ) ) {
  		$latest_src = fread( $fr, filesize( $src_file_path ) );
  		fclose($fr);
  	} else {
  		return false;
  	}
  	return $latest_src;
  }
  
  function backup_file( $path ){
    $backup_path = $this->plugin_base_dir . '/backups' . $path;
    wp_mkdir_p( dirname( $backup_path ) );
    copy($path, $backup_path);
  }
  
  function save(){
    $storage_array['script_latest_version']      = $this->script_latest_version;
    $storage_array['script_safe_version']        = $this->script_safe_version;
    $storage_array['last_version_check']         = $this->last_version_check;
    
    $storage_array['script_instances']           = $this->script_instances;
    $storage_array['suspicious_files']           = $this->suspicious_files;
    $storage_array['last_scan']                  = $this->last_scan;
  
    update_option( 'cg_tvs_data', $storage_array );

  }
  
  function show_message( $message, $error = false )
  {
  	if ($error) {
  		echo '<div id="message" class="error">';
  	}
  	else {
  		echo '<div id="message" class="updated fade">';
  	}
  
  	echo "<p><strong>$message</strong></p></div>";
  }

  function admin_panel_controller(){
  	if ( ! current_user_can( 'manage_options' ) )  {
  		wp_die( __( 'You do not have sufficient permissions to access this page.' ) );
  	}
  	$this->init();
  	
  	if ( isset( $_REQUEST['cg-tvs-action'] ) ) {
  		switch ( $_REQUEST['cg-tvs-action'] ) {
  			case 'scan':
  				$this->scan();
  				break;
  			case 'fix':
  			  $this->get_timthumb_src_version();
  			  if($this->get_version_float($this->current_timthumb_src_version) < $this->script_latest_version){
  			   $this->download_new_timthumb_src();
  			  }
  				if ( wp_verify_nonce( $_POST['_wpnonce'], 'fix_timthumb_files' ) ) {
  				  if( is_array( $_POST['fix'] ) && !empty( $_POST['fix'] ) ){
  				    foreach( $_POST['fix'] as $file_id ) {
        				$this->fix_file( $this->script_instances[intval($file_id)]['path'] );
  				    }
  				  }
    				$this->scan(); // Re-scan site
  				}
  				break;
  			case 'fixall':
  				$nonce = $_GET['_wpnonce'];
  				if ( wp_verify_nonce( $nonce, 'fix_all_timthumb_files' ) ) {
  					$vulnerable_files = $this->get_vulnerable_files();	
  					if ( is_array( $vulnerable_files ) && ! empty( $vulnerable_files ) ) {
  						foreach ( $vulnerable_files as $file ) {
  							$this->fix_file( $file );
  						}
  						$this->scan(); // Re-scan site
  					}
  				}
  				break;
  		}
  	}
  	
      if(!empty($this->suspicious_files)){
        $this->show_message('<strong>Oh no!</strong> Files on your site indicate that your server has already been compromised by the timthumb vulnerability.  <a href="http://codegarage.com/hack-cleanup">Get help here</a>', 'error');
      }

  	include_once 'cg-tvs-admin-panel-display.php';
  }
  
}