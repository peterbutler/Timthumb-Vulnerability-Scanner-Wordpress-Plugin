<?php
/*
Plugin Name: TimThumb Vulnerability Scanner
Plugin URI: http://codegarage.com/blog/2011/09/wordpress-timthumb-vulnerability-scanner-plugin/
Description: Find all those pesky timthumb.php scripts with vulnerabilities BEFORE you get hacked!  Scans your wp-content directory for vulnerable instances of timthumb.php, and optionally upgrades them.
Author: Peter Butler</a>, <a href="http://jacobwg.com/">Jacob Gillespie
Version: 1.3
Author URI: http://codegarage.com/
*/


// ============== 
// = ADMIN MENU = 
// ============== 

add_action( 'admin_menu', 'cg_tvs_scanner_menu' );

function cg_tvs_scanner_menu() {
	add_management_page( 'Timthumb Scanner', 'Timthumb Scanner', 'manage_options', 'cg-timthumb-scanner', 'cg_timthumb_scanner_panel' );
}

function cg_timthumb_scanner_panel() {
	if ( ! current_user_can( 'manage_options' ) )  {
		wp_die( __( 'You do not have sufficient permissions to access this page.' ) );
	}
	
	if ( isset( $_REQUEST['cg-action'] ) ) {
		switch ( $_REQUEST['cg-action'] ) {
			case 'scan':
				cg_tvs_scan();
				break;
			case 'fix':
				$nonce = $_GET['_wpnonce'];
				if ( wp_verify_nonce( $nonce, 'fix_timthumb_file' ) ) {
				cg_tvs_fix_file( urldecode( $_GET['file'] ) );
				cg_tvs_scan(); // Re-scan site
				}
				break;
			case 'fixall':
				$nonce = $_GET['_wpnonce'];
				if ( wp_verify_nonce( $nonce, 'fix_all_timthumb_files' ) ) {
					$vulnerable_files = get_option( 'cg_tvs_vulnerable_files' );	
					if ( is_array( $vulnerable_files ) && ! empty( $vulnerable_files ) ) {
						foreach ( $vulnerable_files as $file ) {
							cg_tvs_fix_file( $file );
						}
						cg_tvs_scan(); // Re-scan site
					}
				}
				break;
		}
	}

	$vulnerable_files = get_option( 'cg_tvs_vulnerable_files' );
	if(  is_array( $vulnerable_files ) && ! empty( $vulnerable_files ) ) {
		$vulnerable_list_html  = '<ol>';
		foreach ( $vulnerable_files as $file ) {
			$vulnerable_list_html .= '<li><a href="' . wp_nonce_url( 'tools.php?page=cg-timthumb-scanner&cg-action=fix&file=' . urlencode( $file ), 'fix_timthumb_file') . '" class="button-secondary">Fix</a> <span style="color:red">' . basename( $file ) . '</span> <small>(found at ' . $file . ')</small></li>';
		}
		$vulnerable_list_html .= '</ol>';
	} else {
		$vulnerable_list_html = '<span style="color:forestgreen">No Vulnerabilities Found!</span>';
	}

	$safe_files = get_option( 'cg_tvs_safe_files' );	
	if(is_array($safe_files) && !empty($safe_files)) {
		$safe_list_html  = '<ol>';
		foreach($safe_files as $file) {
			$safe_list_html .= "<li><span style='color:forestgreen'>" . basename( $file ) . "</span> <small>(found at $file)</small></li>\n";
		}
		$safe_list_html .= '</ol>';
	} else {
		$safe_list_html = '<span style="color:forestgreen">No Up to Date Versions Found!</span>';
	}
	include_once 'cg-tvs-admin-panel.php';
}

// ==============
// = SCAN FILES =
// ==============

function cg_tvs_scan() {
	require_once 'cg-tvs-filescanner.php';
	$scanner = new CG_FileScanner( WP_CONTENT_DIR );
	$scanner->generate_inventory();
	$scanner->scan_inventory();
	update_option( 'cg_tvs_last_checked', date('Y-m-d H:i:s') );
	update_option( 'cg_tvs_vulnerable_files', $scanner->VulnerableFiles );
	update_option( 'cg_tvs_safe_files', $scanner->SafeFiles );
	cg_tsv_show_message('Scan completed.');
}

// ============
// = FIX FILE =
// ============

function cg_tvs_fix_file($file, $backup = false ) {
	$src_file_path = trailingslashit( dirname( __FILE__ ) ) . 'cg-tvs-timthumb-latest.txt';
	if ( FALSE !== $fr = @fopen( $src_file_path, 'r' ) ) {
		$latest_src = fread( $fr, filesize( $src_file_path ) );
		fclose($fr);
	} else {
		cg_tsv_show_message( 'CAN\'T READ TIMTHUMB SOURCE FILE', true );
		return;
	}
	if( FALSE !== $fw = @fopen( $file, 'w' ) ) {
		if ( fwrite( $fw, $latest_src ) ) {
			cg_tsv_show_message( 'File <strong>' . basename( $file ) . '</strong> at <em>' . $file . '</em> successfully upgraded.' );
		} else {
			cg_tsv_show_message( 'Unknown file write error.', true );
		}
	} else {
		cg_tsv_show_message( 'CAN\'T OPEN VULNERABLE FILE FOR WRITING', true );
		return;
	}
}

function cg_tsv_show_message( $message, $error = false )
{
	if ($error) {
		echo '<div id="message" class="error">';
	}
	else {
		echo '<div id="message" class="updated fade">';
	}

	echo "<p><strong>$message</strong></p></div>";
}

// ================
// = DEACTIVATION =
// ================

register_deactivation_hook( __FILE__, 'cg_tvs_scan_deactivate' );

function cg_tvs_scan_deactivate() {
	delete_option( 'cg_tvs_last_checked' );
	delete_option( 'cg_tvs_vulnerable_files' );
	delete_option( 'cg_tvs_safe_files' );
}
