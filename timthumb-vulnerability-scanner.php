<?php
/*
Plugin Name: TimThumb Vulnerability Scanner
Plugin URI: http://codegarage.com/blog/2011/09/wordpress-timthumb-vulnerability-scanner-plugin/
Description: Find all those pesky timthumb.php scripts with vulnerabilities BEFORE you get hacked!  Scans your wp-content directory for vulnerable instances of timthumb.php, and optionally upgrades them.
Author: Peter Butler
Version: 1.2
Author URI: http://codegarage.com/
*/


// ============== 
// = ADMIN MENU = 
// ============== 

add_action('admin_menu', 'cg_tvs_scanner_menu');

function cg_tvs_scanner_menu() {
	add_management_page('Timthumb Scanner', 'Timthumb Scanner', 'manage_options', 'cg-timthumb-scanner', 'cg_timthumb_scanner_panel');
}

function cg_timthumb_scanner_panel() {
	if (!current_user_can('manage_options'))  {
		wp_die( __('You do not have sufficient permissions to access this page.') );
	}
	
    if(isset($_REQUEST['cg-action'])){
      switch($_REQUEST['cg-action']){
        case 'scan':
          include_once 'cg-tvs-filescanner.php';
          $scanner = new CG_FileScanner(WP_CONTENT_DIR);
          $scanner->generate_inventory();
          $scanner->scan_inventory();
          update_option('cg_tvs_last_checked', date("Y-m-d H:i:s"));
          update_option('cg_tvs_vulnerable_files', $scanner->VulnerableFiles);
          update_option('cg_tvs_safe_files', $scanner->SafeFiles);
        case 'fix':
          $nonce = $_GET['_wpnonce'];
          if(wp_verify_nonce($nonce, 'fix_timthumb_file')){
            $fix_path = urldecode($_GET['file']);
            $src_file_path = trailingslashit(dirname(__FILE__)).'cg-tvs-timthumb-latest.txt';
            if(FALSE !== $fr = @fopen($src_file_path, 'r')){
              $latest_src = fread($fr, filesize($src_file_path));
              fclose($fr);
            }else{
              $message = "CAN'T READ TIMTHUMB SOURCE FILE";
              break;
            }
            if(FALSE !== $fw = @fopen($fix_path, 'w')){
              if(fwrite($fw, $latest_src)){
                $message = "File <strong>".basename($fix_path)."</strong> at <em>".$fix_path."</em> successfully upgraded.";
              }else{
                $message = "Unknown file write error.";
              }
            }else{
              $message = "CAN'T OPEN VULNERABLE FILE FOR WRITING";
              break;
            }
            // Re-scan site
            include_once 'cg-tvs-filescanner.php';
            $scanner = new CG_FileScanner(WP_CONTENT_DIR);
            $scanner->generate_inventory();
            $scanner->scan_inventory();
            update_option('cg_tvs_last_checked', date("Y-m-d H:i:s"));
            update_option('cg_tvs_vulnerable_files', $scanner->VulnerableFiles);
            update_option('cg_tvs_safe_files', $scanner->SafeFiles);
          }          
    }
	}
	
	$vulnerable_files = get_option('cg_tvs_vulnerable_files');	
	if(is_array($vulnerable_files) && !empty($vulnerable_files)){
	 $vulnerable_list_html    = "<ol>\n";
	 foreach($vulnerable_files as $file){
  	 $vulnerable_list_html .= "<li><a href='".wp_nonce_url("tools.php?page=cg-timthumb-scanner&cg-action=fix&file=".urlencode($file), 'fix_timthumb_file')."' class='button-secondary'>Fix</a> <span style='color:red'>".basename($file)."</span> <small>(found at $file)</small></li>\n";
	 }
	 $vulnerable_list_html   .= "</ol>\n";
	}else{
	 $vulnerable_list_html = "<span style='color:forestgreen'>No Vulnerabilities Found!</span>";
	}
	
	$safe_files = get_option('cg_tvs_safe_files');	
	if(is_array($safe_files) && !empty($safe_files)){
	 $safe_list_html    = "<ol>\n";
	 foreach($safe_files as $file){
  	 $safe_list_html .= "<li><span style='color:forestgreen'>".basename($file)."</span> <small>(found at $file)</small></li>\n";
	 }
	 $safe_list_html   .= "</ol>\n";
	}else{
	 $safe_list_html = "<span style='color:forestgreen'>No Up to Date Versions Found!</span>";
	}
	include_once 'cg-tvs-admin-panel.php';
}

// ================ 
// = DEACTIVATION = 
// ================ 

register_deactivation_hook( __FILE__, 'cg_tvs_scan_deactivate' );

function cg_tvs_scan_deactivate(){
  delete_option('cg_tvs_last_checked');
  delete_option('cg_tvs_vulnerable_files');
  delete_option('cg_tvs_safe_files');
}
